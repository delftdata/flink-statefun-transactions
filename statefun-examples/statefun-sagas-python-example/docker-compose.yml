version: "2.1"
services:
### Zookeeper and Kafka to serve as ingress and egress for the application 
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka-broker:
    image: wurstmeister/kafka:2.12-2.0.1
    ports:
      - "9092:9092"
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      # below is "TOPIC1:PARTITIONS:REPLICATIONS,TOPIC2:PARTIONS:REPLICATIONS..."
      KAFKA_CREATE_TOPICS: "user-requests:8:1,user-responses:8:1,stock-requests:8:1,stock-responses:8:1,order-requests:8:1,order-responses:8:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - zookeeper

### Statefun worker and master
  master:
    build:
      context: .
    expose:
      - "6123"
    ports:
      - "8081:8081"
    environment:
      - ROLE=master
      - MASTER_HOST=master
    # volumes:
    #   - ./checkpoint-dir:/checkpoint-dir
  worker:
    build:
      context: .
    expose:
      - "6121"
      - "6122"
    depends_on:
      - master
      - kafka-broker
    links:
      - "master:master"
      - "kafka-broker:kafka-cluster-kafka-bootstrap"
    environment:
      - ROLE=worker
      - MASTER_HOST=master
    # volumes:
    #   - ./checkpoint-dir:/checkpoint-dir

### Functions
  user-function:
      build:
          context: .
          dockerfile: user/Dockerfile
      expose:
          - 80
  stock-function:
      build:
          context: .
          dockerfile: stock/Dockerfile
      expose:
          - 80
  order-function:
      build:
          context: .
          dockerfile: order/Dockerfile
      expose:
          - 80
  checkout-function:
      build:
          context: .
          dockerfile: checkout/Dockerfile
      expose:
          - 80

### Gateway services communicating with Kafka triggering the functions and fetching the responses
  user-gateway:
    hostname: user-gateway
    ports:
      - 81:80
    environment:
      KAFKA_BROKER: "kafka-broker:9092"
    build:
      dockerfile: gateway/user/Dockerfile
      context: .
  stock-gateway:
    hostname: stock-gateway
    ports:
      - 82:80
    environment:
      KAFKA_BROKER: "kafka-broker:9092"
    build:
      dockerfile: gateway/stock/Dockerfile
      context: .
  order-gateway:
    hostname: order-gateway
    ports:
      - 83:80
    environment:
      KAFKA_BROKER: "kafka-broker:9092"
    build: 
      dockerfile: gateway/order/Dockerfile
      context: .
